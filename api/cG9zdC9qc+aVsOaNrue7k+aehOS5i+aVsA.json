{"title":"js数据结构之树的基本总结","date":"2019-05-13T06:18:21.043Z","slug":"js数据结构之数","tags":["数据结构"],"categories":["数据结构"],"updated":"2019-05-15T04:00:46.642Z","content":"<h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><h3 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h3><h4 id=\"链式存储\"><a href=\"#链式存储\" class=\"headerlink\" title=\"链式存储\"></a>链式存储</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const node = &#123;</span><br><span class=\"line\">    data: 1,//节点的值</span><br><span class=\"line\">    left: node2,//有节点则指向相应的位置</span><br><span class=\"line\">    right: null //没有右节点，则值为空</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"顺序存储\"><a href=\"#顺序存储\" class=\"headerlink\" title=\"顺序存储\"></a>顺序存储</h4><p>用数组存储（普遍用法，一般情况下更节约空间）<br>一般从数组的下标1开始存储<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left = 2 * i;</span><br><span class=\"line\">right = 2 * i + 1;</span><br><span class=\"line\">i = left / 2;   </span><br><span class=\"line\">i = Math.floor(right / 2);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h3><h4 id=\"前序遍历\"><a href=\"#前序遍历\" class=\"headerlink\" title=\"前序遍历\"></a>前序遍历</h4><p>根左右</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let preOrder = function()&#123;</span><br><span class=\"line\">    let arr = []</span><br><span class=\"line\">    getNode(this.root)</span><br><span class=\"line\">    return arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function getNode(node)&#123;</span><br><span class=\"line\">    if(!node)&#123;return&#125;</span><br><span class=\"line\">    arr.push(node.value)</span><br><span class=\"line\">    getNode(node.left)</span><br><span class=\"line\">    getNode(node.right)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"中序遍历\"><a href=\"#中序遍历\" class=\"headerlink\" title=\"中序遍历\"></a>中序遍历</h4><p>左根右<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let preOrder = function()&#123;</span><br><span class=\"line\">    let arr = []</span><br><span class=\"line\">    getNode(this.root)</span><br><span class=\"line\">    return arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function getNode(node)&#123;</span><br><span class=\"line\">    if(!node)&#123;return&#125;</span><br><span class=\"line\">    getNode(node.left)</span><br><span class=\"line\">    arr.push(node.value)</span><br><span class=\"line\">    getNode(node.right)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"后续遍历\"><a href=\"#后续遍历\" class=\"headerlink\" title=\"后续遍历\"></a>后续遍历</h4><p>左右根<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let preOrder = function()&#123;</span><br><span class=\"line\">    let arr = []</span><br><span class=\"line\">    getNode(this.root)</span><br><span class=\"line\">    return arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function getNode(node)&#123;</span><br><span class=\"line\">    if(!node)&#123;return&#125;</span><br><span class=\"line\">    getNode(node.left)</span><br><span class=\"line\">    getNode(node.right)</span><br><span class=\"line\">    arr.push(node.value)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>前序、中序 -&gt; 后序</p>\n</blockquote>\n<blockquote>\n<p>后序、中序 -&gt; 前序</p>\n</blockquote>\n<h4 id=\"二叉搜索树\"><a href=\"#二叉搜索树\" class=\"headerlink\" title=\"二叉搜索树\"></a>二叉搜索树</h4><ul>\n<li>左节点不为空 则左节点的值小于根节点的值</li>\n<li>右节点不为空 则右节点的值大于根节点的值</li>\n<li>任意左右子树都为二叉搜索树</li>\n</ul>\n<p>当查找最小数时，适合用栈去解决</p>\n","next":{"title":"深入react生命周期","slug":"深入React生命周期"},"link":"http://yoursite.com/post/js数据结构之数/","toc":[{"title":"二叉树","id":"二叉树","index":"1","children":[{"title":"存储","id":"存储","index":"1.1","children":[{"title":"链式存储","id":"链式存储","index":"1.1.1"},{"title":"顺序存储","id":"顺序存储","index":"1.1.2"}]},{"title":"遍历","id":"遍历","index":"1.2","children":[{"title":"前序遍历","id":"前序遍历","index":"1.2.1"},{"title":"中序遍历","id":"中序遍历","index":"1.2.2"},{"title":"后续遍历","id":"后续遍历","index":"1.2.3"},{"title":"二叉搜索树","id":"二叉搜索树","index":"1.2.4"}]}]}],"copyright":{"custom":"飞过人间的无常 才懂爱才是宝藏"}}